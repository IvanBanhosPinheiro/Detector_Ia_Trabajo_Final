; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "DetectorIA"
#define MyAppVersion "1.0"
#define MyAppPublisher "IvánB"
#define MyAppURL "https://github.com/IvanBanhosPinheiro/Detector_Ia_Trabajo_Final"
#define MyAppExeName "DetectorIA_hidden.exe"
#define MyAppDebugName "DetectorIA_debug.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{FA436412-CEA6-4C49-993F-0BCD255EBDBD}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputDir={userdesktop}
OutputBaseFilename=IaDetectorInstaller
SetupIconFile=flask.ico
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "startup"; Description: "Iniciar automáticamente al encender Windows"; GroupDescription: "Opciones de inicio:"; Flags: unchecked

[Files]
Source: "{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#MyAppDebugName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\..\tesseract-ocr-w64-setup-5.4.0.20240606.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{#MyAppName} (Modo Debug)"; Filename: "{app}\{#MyAppDebugName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: startup

[Run]
Filename: "{tmp}\tesseract-ocr-w64-setup-5.4.0.20240606.exe"; Flags: shellexec waituntilterminated
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
var
  ConfigPage: TInputQueryWizardPage;

procedure InitializeWizard;
begin
  // Crea una página personalizada para la configuración
  ConfigPage := CreateInputQueryPage(wpSelectTasks,
    'Configuración del Detector IA',
    'Configura los parámetros de conexión y OCR',
    'Por favor, especifica la dirección del servidor y la ruta de Tesseract OCR:');
  
  // Añade campos para la URL del servidor
  ConfigPage.Add('URL del servidor:', False);
  ConfigPage.Values[0] := 'http://192.168.0.23:5000';
  
  // Añade campos para la ruta de Tesseract
  ConfigPage.Add('Ruta de Tesseract OCR:', False);
  ConfigPage.Values[1] := 'C:\Program Files\Tesseract-OCR\tesseract.exe';
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  Result := True;
  // Asegúrese de que los campos no estén vacíos
  if CurPageID = ConfigPage.ID then
  begin
    if ConfigPage.Values[0] = '' then
    begin
      MsgBox('La URL del servidor no puede estar vacía.', mbError, MB_OK);
      Result := False;
    end
    else if ConfigPage.Values[1] = '' then
    begin
      MsgBox('La ruta de Tesseract OCR no puede estar vacía.', mbError, MB_OK);
      Result := False;
    end;
  end;
end;

// Esta función guarda la configuración
procedure CurStepChanged(CurStep: TSetupStep);
var
  ConfigFile: String;
  TesseractPath: String;
begin
  if CurStep = ssPostInstall then
  begin
    ConfigFile := ExpandConstant('{app}\config.ini');
    
    // Crear archivo config.ini con los valores proporcionados por el usuario
    SaveStringToFile(ConfigFile, '[Cliente]' + #13#10, False);
    SaveStringToFile(ConfigFile, 'url_servidor = ' + ConfigPage.Values[0] + #13#10, True);
    
    // Usar StringChangeEx para reemplazar todas las barras invertidas
    TesseractPath := ConfigPage.Values[1];
    StringChangeEx(TesseractPath, '\', '\\', True);
    SaveStringToFile(ConfigFile, 'ruta = ' + TesseractPath + #13#10, True);
  end;
end;